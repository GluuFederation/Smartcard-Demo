<VirtualHost ip_address1:80>
	ServerName cactest.gluu.org
        Redirect  / https://ip_address1
        DocumentRoot /var/www/html/
	
</VirtualHost>
Listen 443 https
# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
<VirtualHost ip_address1:443>
        DocumentRoot /var/www/html/
        ServerName cactest.gluu.org

        LogLevel warn
        SSLEngine on
	    SSLCertificateFile      /etc/nginx/ssl/httpd.crt
        SSLCertificateKeyFile   /etc/nginx/ssl/httpd.key
	    SSLCACertificateFile 	/etc/certs/chain_cert.pem
	    SSLCipherSuite ALL:!aNULL:!ADH:!eNULL:!LOW:!EXP:RC4+RSA:+HIGH:+MEDIUM:+SSLv3
	    SSLOCSPEnable off
        SSLOCSPDefaultResponder "https://google.com"
        SSLOCSPOverrideResponder on

# Security headers

        Header always set X-Xss-Protection "1; mode=block"
        Header always set X-Content-Type-Options nosniff
	Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
	Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED
        Header edit Set-Cookie ^((?!opbs|session_state).*)$ $1;HttpOnly
        SetEnvIf User-Agent ".*MSIE.*" \
                 nokeepalive ssl-unclean-shutdown \
                 downgrade-1.0 force-response-1.0

                # Unset X-ClientCert to make sure that we not get certificate in request
        RequestHeader unset X-ClientCert

                # Turn off support for true Proxy behaviour as we are acting as a transparent proxy
        ProxyRequests Off

                # Turn off VIA header as we know where the requests are proxied
                ProxyVia Off

                # Turn on Host header preservation so that the servlet container
                # can write links with the correct host and rewriting can be avoided.
                ProxyPreserveHost On

                # Preserve the scheme when proxying the request to Jetty
        RequestHeader set X-Forwarded-Proto "https" env=HTTPS
        
	Header unset ETag
        FileETag None
        RedirectMatch ^(/)$ /identity/	
	
	<Proxy *>
        	Order deny,allow
        	Allow from all
   	</Proxy>	

	ProxyRequests Off

	ProxyPreserveHost On

	SSLProxyEngine on
	SSLProxyVerify none 
	SSLProxyCheckPeerCN off
	SSLProxyCheckPeerName off
	SSLProxyCheckPeerExpire off
		
	
	<Proxy balancer://mycluster>
	    BalancerMember https://node1.gluu.org route=1
	    BalancerMember https://node2.gluu.org route=2
	    Order Deny,Allow
            Deny from none
            Allow from all
	    ProxySet lbmethod=bytraffic 
	    ProxySet stickysession=ROUTEID
	</Proxy>
	
	ProxyPass /identity balancer://mycluster/identity
	ProxyPass /oxauth balancer://mycluster/oxauth
	ProxyPass /idp balancer://mycluster/idp
   	ProxyPass /oxauth-rp balancer://mycluster/oxauth-rp
	ProxyPass /casa balancer://mycluster/casa
	ProxyPass /cas balancer://mycluster/cas
	
	<LocationMatch /oxauth/auth/regtr.htm>
            SSLVerifyClient require
            SSLVerifyDepth 10
            SSLOptions -StdEnvVars +StrictRequire +ExportCertData

            # Forward certificate to destination server
            RequestHeader set X-ClientCert %{SSL_CLIENT_CERT}s
        </LocationMatch>
	
	<LocationMatch /oxauth/auth/cert/cert-login.htm>
            SSLVerifyClient require
            SSLVerifyDepth 10
            SSLOptions -StdEnvVars +StrictRequire +ExportCertData

            # Forward certificate to destination server
            RequestHeader set X-ClientCert %{SSL_CLIENT_CERT}s
        </LocationMatch>

        <LocationMatch /casa/pl/cert/index.zul>
            SSLVerifyClient require
            SSLVerifyDepth 10
            SSLOptions -StdEnvVars +StrictRequire +ExportCertData

            # Forward certificate to destination server
            RequestHeader set X-ClientCert %{SSL_CLIENT_CERT}s
        </LocationMatch>
	

        ProxyPass        /.well-known/openid-configuration balancer://mycluster/oxauth/.well-known/openid-configuration
        ProxyPass        /.well-known/simple-web-discovery balancer://mycluster/oxauth/.well-known/simple-web-discovery
        ProxyPass        /.well-known/webfinger balancer://mycluster/oxauth/.well-known/webfinger
        ProxyPass        /.well-known/uma2-configuration balancer://mycluster/oxauth/restv1/uma2-configuration
        ProxyPass        /.well-known/fido-configuration balancer://mycluster/oxauth/restv1/fido-configuration
        ProxyPass        /.well-known/fido2-configuration balancer://mycluster/oxauth/restv1/fido2/configuration
        ProxyPass        /.well-known/fido-u2f-configuration balancer://mycluster/oxauth/restv1/fido-configuration
        ProxyPass        /.well-known/scim-configuration balancer://mycluster/identity/restv1/scim-configuration


	
#	ProxyPassReverse / balancer://mycluster/ stickysession=JSESSIONID

        ProxyErrorOverride On

        <If "%{REQUEST_URI} =~ m#(.*)/rest(.*)#">
            ProxyErrorOverride Off
        </If>




</VirtualHost>
